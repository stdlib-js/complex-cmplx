{
  "version": 3,
  "sources": ["../lib/ctors.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex-float64' );\nvar Complex64 = require( '@stdlib/complex-float32' );\n\n\n// MAIN //\n\nvar CTORS = {\n\t'float64': Complex128,\n\t'float32': Complex64\n};\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string-format' );\nvar CTORS = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Creates a complex number.\n*\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @returns {Complex} complex number\n*\n* @example\n* var z = complex( 5.0, 3.0, 'float64' );\n* // returns <Complex128>\n*/\nfunction complex( real, imag, dtype ) {\n\tvar ctor;\n\tif ( arguments.length > 2 ) {\n\t\tctor = CTORS[ dtype ];\n\t\tif ( ctor ) {\n\t\t\treturn new ctor( real, imag );\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\treturn new CTORS[ 'float64' ]( real, imag );\n}\n\n\n// EXPORTS //\n\nmodule.exports = complex;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a complex number.\n*\n* @module @stdlib/complex-cmplx\n*\n* @example\n* var complex = require( '@stdlib/complex-cmplx' );\n*\n* var z = complex( 5.0, 3.0, 'float64' );\n* // returns <Complex128>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,yBAA0B,EAChDC,EAAY,QAAS,yBAA0B,EAK/CC,EAAQ,CACX,QAAWF,EACX,QAAWC,CACZ,EAKAF,EAAO,QAAUG,ICpCjB,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,uBAAwB,EAC1CC,EAAQ,IAkBZ,SAASC,EAASC,EAAMC,EAAMC,EAAQ,CACrC,IAAIC,EACJ,GAAK,UAAU,OAAS,EAAI,CAE3B,GADAA,EAAOL,EAAOI,CAAM,EACfC,EACJ,OAAO,IAAIA,EAAMH,EAAMC,CAAK,EAE7B,MAAM,IAAI,UAAWJ,EAAQ,sEAAuEK,CAAM,CAAE,CAC7G,CACA,OAAO,IAAIJ,EAAO,QAAaE,EAAMC,CAAK,CAC3C,CAKAL,EAAO,QAAUG,ICtBjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_ctors", "__commonJSMin", "exports", "module", "Complex128", "Complex64", "CTORS", "require_main", "__commonJSMin", "exports", "module", "format", "CTORS", "complex", "real", "imag", "dtype", "ctor", "main"]
}
